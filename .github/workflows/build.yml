name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8

    - name: Create test data
      run: |
        mkdir -p data
        echo "Commodity,Bullish_Min,Bullish_Max,Bearish_Min,Bearish_Max
        CL=F,30,40,60,70
        NG=F,35,45,65,75
        GC=F,25,35,65,75
        SI=F,30,40,60,70
        HG=F,35,45,65,75
        ZC=F,30,40,60,70
        ZS=F,35,45,65,75
        ZW=F,30,40,60,70" > data/cot_signals.csv

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        python -m pytest tests/ -v

    - name: Build and test Docker image
      run: |
        docker build -t commodity-charter .
        docker run --name test-container -d -p 8501:8501 commodity-charter
        sleep 10
        curl --fail http://localhost:8501/_stcore/health || exit 1
        docker stop test-container
        docker rm test-container
